/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "places.h"
#include "airport.h"
findPlace_ret *
findplace_1_svc(cityNode *argp, struct svc_req *rqstp)
{
	static findPlace_ret  result;
	CLIENT *clnt;
	findAirport_ret  *result_1;
	geoCord  findair_1_arg;
	char * host  = "localhost";
	AirportNode ** temp;
	AirportNode_places ** writerPTR;
	/*
	 * insert server code here
	 */
//Thius prints out the core recived the info from the client
	 printf("%s \n", argp->city);
	 printf("%s \n", argp->state);
#ifndef	DEBUG
	clnt = clnt_create (host, AIRPROG, AIR_VERS, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */
//populates the item were sending with information
	double lat = 56.2345;
	double lon = 45.12456;
	findair_1_arg.latitude = lat;
	findair_1_arg.longitude = lon;
//RPC call to airport server
	result_1 = findair_1(&findair_1_arg, clnt);
	if (result_1 == (findAirport_ret *) NULL) {
		clnt_perror (clnt, "call failed");
	}
//Printing out results from Airport Server
	temp = &result_1->findAirport_ret_u.list;
	printf("%s  \n", (*temp)->AirportName);
	printf("%s  \n", (*temp)->AirportCode);
	printf("%f  \n", (*temp)->latitude);
	printf("%f  \n", (*temp)->longitude);
	printf("%f  \n", (*temp)->distance);
//copy objects im not freeing memory this will happen latter
//when we return the link list
	printf("here");
	writerPTR = &result.findPlace_ret_u.list;
	(*writerPTR) = (AirportNode_places*)malloc(sizeof(AirportNode_places));
	(*writerPTR)->AirportName =malloc(MAXLEN);
	(*writerPTR)->AirportCode =malloc(MAXLEN);
	strcpy((*writerPTR)->AirportName,(*temp)->AirportName);
	strcpy((*writerPTR)->AirportCode,(*temp)->AirportCode);
	(*writerPTR)->latitude = (*temp)->latitude;
	(*writerPTR)->longitude = (*temp)->longitude;
	(*writerPTR)->distance = (*temp)->distance;
	writerPTR = &(*writerPTR)->next;
	writerPTR = NULL;
	return &result;
}
